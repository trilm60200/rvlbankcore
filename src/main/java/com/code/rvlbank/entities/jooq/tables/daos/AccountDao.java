/*
 * This file is generated by jOOQ.
 */
package com.code.rvlbank.entities.jooq.tables.daos;


import com.code.rvlbank.entities.jooq.tables.pojos.Account;
import com.code.rvlbank.entities.jooq.tables.records.AccountRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountDao extends DAOImpl<AccountRecord, Account, Long> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT, Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    public AccountDao(Configuration configuration) {
        super(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT, Account.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(Account object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<Account> fetchById(Long... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public Account fetchOneById(Long value) {
        return fetchOne(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>ACCOUNT_REF IN (values)</code>
     */
    public List<Account> fetchByAccountRef(String... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.ACCOUNT_REF, values);
    }

    /**
     * Fetch records that have <code>LOCKED IN (values)</code>
     */
    public List<Account> fetchByLocked(Boolean... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.LOCKED, values);
    }

    /**
     * Fetch records that have <code>BALANCE IN (values)</code>
     */
    public List<Account> fetchByBalance(BigDecimal... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.BALANCE, values);
    }

    /**
     * Fetch records that have <code>CURRENCY IN (values)</code>
     */
    public List<Account> fetchByCurrency(String... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.CURRENCY, values);
    }

    /**
     * Fetch records that have <code>IS_ACTIVE IN (values)</code>
     */
    public List<Account> fetchByIsActive(Boolean... values) {
        return fetch(com.code.rvlbank.entities.jooq.tables.Account.ACCOUNT.IS_ACTIVE, values);
    }
}
